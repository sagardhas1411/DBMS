
Title: Database Connectivity: Write a program to implement MySQL/Oracle database connectivity with any front end language to implement Database navigation operations (add, delete, edit etc.)

MySQL Connection Code File:
from Mysql_Connection import DBConnection


def main():
    abc=DBConnection()
    while True:
        print("******Welcome screen******")
        print("\n1. Insert")
        print("\n2. Display")
        print("\n3. Update")
        print("\n4. Delete")
        print("\n5. Exit")
        try:
            choice=int(input("Enter your choice : "))
            if (choice==1):
                pr=int(input("Enter price of phone : "))
                st=int(input("Enter stock : "))
                md=input("Enter mobile model : ")
                ef=int(input("Enter effiency : "))
                abc.insert_val(pr,st,md,ef)
            elif (choice==2):
                abc.display()
            elif (choice==3):
                abc.update_val()
            elif (choice==4):
                abc.delete_val()
            elif (choice==5):
                break
            else:
               print("Invalide Choice!")
               print("Please Try Again") 
        except Exception as e:
            print(e)
            print("Invalide Choice!")
if __name__=="__main__":
    main()

CURD Operation Code File:

import mysql.connector

class DBConnection:
    def __init__(self):
        self.conn=mysql.connector.connect(host="localhost", user="root", password="root")
        cursor=self.conn.cursor()


    '''def dbcreation(self,name):
        cur1=self.conn.cursor()
        q="create database {}".format(name)
        #cur1.execute("create database demo_example2")
        cur1.execute(q)
        self.conn.commit()
        print("database created!")    
    

    def dbtable(self):
        cur2 = self.conn.cursor()
        q1 = "create table demo1(price int, stock int, model varchar(12), efficiency int)"
        cur2.execute("use Prac8;")
        cur2.execute(q1)
        self.conn.commit()'''


    def insert_val(self,p,s,m,e):
        cur3=self.conn.cursor()
        q="insert into demo1(price,stock,model,efficiency) values({},{},'{}',{})".format(p,s,m,e)
        cur3.execute("use Prac8")       
        cur3.execute(q)
        self.conn.commit()
        print('data inserted!')


    def display(self):
        cur3=self.conn.cursor()
        cur3.execute("use Prac8")
        cur3.execute("select * from demo1")
        for a in cur3:
            print(a)


    def delete_val(self):
        cur3=self.conn.cursor()
        cur3.execute("use Prac8")
        cur3.execute("select * from demo1")
        for a in cur3:
            print(a)
        print("which data you want to delete?")
        c=input("enter model for delete : ")
        q="delete from demo1 where model='{}'".format(c)
        cur3.execute(q)
        self.conn.commit()
        print("Record Deleted!")


    def update_val(self):
        cur3=self.conn.cursor()
        cur3.execute("use Prac8")
        cur3.execute("select * from demo1")
        for a in cur3:
            print(a)
            
        print("which data you want to update?")
        m=input("Enter model name for update : ")
        p=int(input("\n Enter change price : "))
        st=int(input("\n Enter change stock value : "))
        e=int(input("Enter efficiency : "))
        q="update demo1 set price={},stock={},efficiency={} where model='{}'".format(p,st,e,m)
        cur3.execute(q)
        self.conn.commit()
        print("Data Updated!")


abc = DBConnection()
#ab = input("enter which database you want to created!")
#abc.dbcreation(ab)
#abc.dbtable()
''''''
#abc.update_val()








 


 



  
        


